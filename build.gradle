plugins {
    id "com.diffplug.spotless" version "7.0.0.BETA4"
}

group = 'org.carl'
version = '1.0-SNAPSHOT'

subprojects {
    apply {
        plugin("com.diffplug.spotless")
        plugin("maven-publish")
        plugin("java")
        plugin("idea")
        plugin("groovy")
    }
    group 'org.carl'
    version '1.0-SNAPSHOT'
    repositories {
        maven { url 'https://maven.aliyun.com/repository/central' }
        mavenCentral()

    }
    java {
        sourceCompatibility = JavaVersion.VERSION_21
        targetCompatibility = JavaVersion.VERSION_21
    }

    compileJava {
        options.encoding = 'UTF-8'
        options.compilerArgs << '-parameters'
    }

    compileTestJava {
        options.encoding = 'UTF-8'
    }
    javadoc.options.encoding = 'UTF-8'
    dependencies {
        implementation enforcedPlatform(libs.quarkusPlatform)
        implementation enforcedPlatform(libs.quarkusCamelPlatform)
        implementation libs.bundles.base
        implementation libs.bundles.protocol
        testImplementation libs.quarkusJunit5
    }

    test {
        systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
    }

    spotless {
        // optional: limit format enforcement to just the files changed by this feature branch
        ratchetFrom 'origin/master'

        java {
            importOrder()
            cleanthat()
            googleJavaFormat("1.23.0").aosp().reflowLongStrings().formatJavadoc(false).reorderImports(false).groupArtifact("com.google.googlejavaformat:google-java-format")
            formatAnnotations()
        }
        groovy {
            importOrder()
            removeSemicolons()
            greclipse()
            excludeJava()
        }
    }
    afterEvaluate {
        def spotless = tasks.findByName('spotlessApply')
        if (spotless) {
            tasks.withType(JavaCompile) {
                finalizedBy(spotless)
            }

            tasks.withType(GroovyCompile) {
                finalizedBy(spotless)
            }
        }
    }
}